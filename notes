Factories and Services

Node is a backend framework for JS - javascript existing outside the browser, taking the google engine (which runs it in the browser) and runs it on a server. Allows you to use asynchronous javascript in the backend and benefit from single threading and non-blokcing functions - very efficient, low on memory and great for microservices.

Factories are patterns for complex objects - you need to create a new one when you inject it in.

Services do the same thing - but injects a new instance in already, without you needing to.

What are the differences then? With a service you are using the same object - the singleton pattern. Wherever we're calling the example service we're using the same object regardless of which controller we use. With a factory, we're using different factories and we instantiate 

Factory patterns and Singleton patterns are key patterns across code - and can be used to refactor
